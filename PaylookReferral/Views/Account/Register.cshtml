@model PaylookReferral.Models.RegisterModel
@{
    ViewBag.Title = "Регистрация аккаунта";
    Layout = "~/Views/Shared/_LoginLayout.cshtml";

    string message = string.Empty;
    ModelState state = null;
    ViewData.ModelState.TryGetValue("Summary", out state);
    var hasErrors = state != null && state.Errors.Any();
    message = (state != null && state.Errors.Any()) ? state.Errors.First().ErrorMessage : string.Empty;    
}

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "enter" }))
{
    <div class="enter__fields">
        @if (hasErrors)
        {
            <div class="message-error message-error_mod js-message">
                <strong>Ошибка!</strong>@message
                <button></button>
            </div>
        }

        @{message = string.Empty;
          state = null;
          ViewData.ModelState.TryGetValue("UserName", out state);
          hasErrors = state != null && state.Errors.Any();
          message = (state != null && state.Errors.Any()) ? state.Errors.First().ErrorMessage : string.Empty;
        }
        <fieldset class="@(hasErrors ? "error" : "")">
            <label for="enter-mail">Емейл</label>
            <p><strong>Ошибка:</strong>@message</p>
            @Html.TextBoxFor(m => m.UserName, new { id = "enter-mail" })

        </fieldset>
        @{
          message = string.Empty;
          state = null;
          ViewData.ModelState.TryGetValue("Password", out state);
          hasErrors = state != null && state.Errors.Any();
          message = (state != null && state.Errors.Any()) ? state.Errors.First().ErrorMessage : string.Empty;
        }
        <fieldset class="@(hasErrors ? "error" : "")">
            <label for="enter-pass">Пароль</label>
            <p><strong>Ошибка:</strong>@message</p>
            @Html.PasswordFor(m => m.Password, new { id = "enter-pass" })
        </fieldset>
        @{
          message = string.Empty;
          state = null;
          ViewData.ModelState.TryGetValue("ConfirmPassword", out state);
          hasErrors = state != null && state.Errors.Any();
          message = (state != null && state.Errors.Any()) ? state.Errors.First().ErrorMessage : string.Empty;
        }
        <fieldset class="@(hasErrors ? "error" : "")">
            <label for="enter-pass">Подтверждение пароля</label>
            <p><strong>Ошибка:</strong>@message</p>
            @Html.PasswordFor(m => m.ConfirmPassword, new { id = "enter-pass" })
        </fieldset>
    </div>			

    <div class="enter__bottom">
        <div class="enter__btn">
            <button type="submit" class="btn-big"><strong>Зарегистрироваться</strong></button>
            <a href="/account/login">Войти</a>
        </div>
    </div>
    <script type="text/javascript">
        $(function () {
            var ma = document.location.search.match('l=[^&]+')
            if (ma) {
                var email = ma[0].replace('l=', '');
                $('#enter-mail').val(email)                
            }
        });
    </script>
}
