@model PayLook.Models.ChangePasswordModel
@{
    ViewBag.Title = "Настройки аккаунта";
    Layout = "~/Views/Shared/_CabinetLayout.cshtml";
    var returnUrl = Request.Params["returnUrl"];

    string message = string.Empty;
    ModelState state = null;
    ViewData.ModelState.TryGetValue("Summary", out state);
    var hasErrors = state != null && state.Errors.Any();
    message = (state != null && state.Errors.Any()) ? state.Errors.First().ErrorMessage : string.Empty;

    var status = TempData["Status"] as string;
}

@if (!string.IsNullOrEmpty(status))
{

    if (status == "success")
    {
    <div class="message-success js-message">
        <strong>Успех!</strong>Данные изменены.
        <button></button>
    </div>       
    }

}

@if (hasErrors)
{
    <div class="message-error js-message">
        <strong>Ошибка!</strong>@message
        <button></button>
    </div>
}
<div class="add-action">
        <div class="add-action__title">Личный кабинет</div>      
    </div>
@Html.Partial("../Payment/Shared/Submenu", "account")    
@using (Html.BeginForm("ChangePassword", "Account", FormMethod.Post, new { @class = "form"}))
{
   
    <fieldset class="fieldset">
        @{
    message = string.Empty;
    state = null;
    ViewData.ModelState.TryGetValue("UserName", out state);
    hasErrors = state != null && state.Errors.Any();
    message = (state != null && state.Errors.Any()) ? state.Errors.First().ErrorMessage : string.Empty;    
        }

        <label for="email-enter" class="form__label label @(hasErrors ? "error" : "")">Емейл для входа</label>
        <div class="form__block">
            @if (hasErrors)
            {
                <div class="message-error message-error_mod js-message">
                    <strong>Ошибка!</strong>@message
                    <button></button>
                </div>
            }
            @Html.TextBoxFor(m => m.UserName, new { id = "email-enter", @class = "input-text input-text_wide " + (hasErrors ? "error" : "") })
            <p class="text">
                После смены емейла на новый, по старому емейлу войти<br>
                в аккаунт будет невозможно.
            </p>
        </div>
    </fieldset>
    <fieldset class="fieldset">
        @{
            message = string.Empty;
            state = null;
            ViewData.ModelState.TryGetValue("OldPassword", out state);
            hasErrors = state != null && state.Errors.Any();
            message = (state != null && state.Errors.Any()) ? state.Errors.First().ErrorMessage : string.Empty;    
        }
        <label for="old-pass" class="form__label label @(hasErrors ? "error" : "")">Текущий пароль</label>
        <div class="form__block">
            @*<input type="text" class="input-text input-text_wide" id="old-pass">*@
            @if (hasErrors)
            {
                <div class="message-error message-error_mod js-message">
                    <strong>Ошибка!</strong>@message
                    <button></button>
                </div>
            }
            @Html.PasswordFor(m => m.OldPassword, new { id = "old-pass", @class = "input-text input-text_wide pass " + (hasErrors ? "error" : "") })
        </div>
    </fieldset>
    <fieldset class="fieldset">
        @{
            message = string.Empty;
            state = null;
            ViewData.ModelState.TryGetValue("NewPassword", out state);
            hasErrors = state != null && state.Errors.Any();
            message = (state != null && state.Errors.Any()) ? state.Errors.First().ErrorMessage : string.Empty;    
        }
        <label for="new-pass" class="form__label label @(hasErrors ? "error" : "")">Новый пароль</label>
        <div class="form__block">
            @*input type="text" class="input-text input-text_wide" id="new-pass">*@
            @if (hasErrors)
            {
                <div class="message-error message-error_mod js-message">
                    <strong>Ошибка!</strong>@message
                    <button></button>
                </div>
            }
            @Html.PasswordFor(m => m.NewPassword, new { id = "new-pass", @class = "input-text input-text_wide pass " + (hasErrors ? "error" : "") })
            <p class="text"><a href="javascript:void(0);" id="showPassword" class="form__pass"><span>Показать пароль</span></a></p>
        </div>
    </fieldset>
    <div class="form__bottom form__bottom_mod">
        <div class="form__next">
            <button type="submit" class="btn-big"><strong>Сохранить</strong></button>
        </div>
        <div class="form__cancel">
            <a href="/Sites">Вернуться к списку сайтов</a>
        </div>
    </div>
    
    <h4 style="border-top: 1px solid #f8d7ad;padding-top:50px;padding-bottom:20px;padding-left:20px;">Платежная информация</h4>
    <fieldset class="fieldset" >
    <label for="fullName" class="form__label label @(hasErrors ? "error" : "")">Наименование предприятия</label>
     <div class="form__block">            
            @Html.TextBoxFor(m => m.FullName, new { id = "fullName", @class = "input-text input-text_wide pass " + (hasErrors ? "error" : "") })            
        </div>
    </fieldset>
    
    
     <fieldset class="fieldset">
    <label for="address" class="form__label label @(hasErrors ? "error" : "")">Индекс</label>
     <div class="form__block">            
            @Html.TextBoxFor(m => m.Index, new { id = "index", @class = "input-text input-text_wide pass " + (hasErrors ? "error" : "") })            
        </div>
    </fieldset>
    
    
    <fieldset class="fieldset">
    <label for="address" class="form__label label @(hasErrors ? "error" : "")">Юридический адрес</label>
     <div class="form__block">            
            @Html.TextBoxFor(m => m.Address, new { id = "address", @class = "input-text input-text_wide pass " + (hasErrors ? "error" : "") })            
        </div>
    </fieldset>
    
    
    <fieldset class="fieldset">
    <label for="inn" class="form__label label @(hasErrors ? "error" : "")">ИНН</label>
     <div class="form__block">            
            @Html.TextBoxFor(m => m.Inn, new { id = "inn", @class = "input-text input-text_wide pass " + (hasErrors ? "error" : "") })            
        </div>
    </fieldset>
    
    
    <fieldset class="fieldset">
    <label for="kpp" class="form__label label @(hasErrors ? "error" : "")">КПП</label>
     <div class="form__block">            
            @Html.TextBoxFor(m => m.Kpp, new { id = "kpp", @class = "input-text input-text_wide pass " + (hasErrors ? "error" : "") })            
        </div>
    </fieldset>
    
    <div class="form__bottom form__bottom_mod">
        <div class="form__next">
            <button type="submit" class="btn-big"><strong>Сохранить</strong></button>
        </div>        
         <div class="form__cancel">
            <a href="/Sites">Вернуться к списку сайтов</a>
        </div>
    </div>
    
}
<script type="text/javascript">

    $(function () {
        var passShowed = false;
        $('#showPassword').click(function () {
            if (!passShowed) {
                $('#old-pass').attr('type', 'text');
                $(this).html('<span>Скрыть пароль</span>');
            }
            else {
                $('#old-pass').attr('type', 'password');
                $(this).html('<span>Показать пароль</span>');
            }
            passShowed = !passShowed;
        });
    });

</script>
